# [variables]
	# define modifier
	$mainMod = SUPER
	# wob = volume thingy
	$WOBSOCK = $XDG_RUNTIME_DIR/wob.sock

	# Wallpaper dir
	$wallpaperdir = $HOME/Data/Pictures/wallpapers/ultrawide

# [environment]
	env = XDG_CURRENT_DESKTOP,Hyprland
	env = XDG_SESSION_TYPE,wayland
	env = XDG_SESSION_DESKTOP,Hyprland

   # [theming]
	# |qt|
		env = QT_QPA_PLATFORMTHEME,qt5ct
		env = QT_STYLE_OVERRIDE,kvantum
		env = QT_QPA_PLATFORM,wayland;xcb
		env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
		env = QT_AUTO_SCREEN_SCALE_FACTOR,1 # enables automatic scaling based on ppi of monitor

	# |gtk|
		env = GDK_BACKEND,wayland,x11
		env = GTK_THEME,Qogir-Dark

	# [application specific]
	env = MOZ_ENABLE_WAYLAND,1

	# [misc]
	env = EGL_PLATFORM,wayland
	env = SDL_VIDEODRIVER,wayland
	env = CLUTTER_BACKEND,wayland
	env = XCURSOR_THEME, Adwaita

# [exec]
	# [exec once on launch]
		#exec-once = wl-clipboard-history -t
		exec-once = /usr/libexec/xdg-desktop-portal-hyprland
		exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
		exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
		exec-once = /usr/libexec/polkit-kde-authentication-agent-1
		#exec-once = dunst
		#exec = swaync
		exec = dunst
		exec-once = waybar


	# [exec and keep active on launch]
		# set wallpaper
		exec = swaybg -m fill -i $wallpaperdir/painting/tizoc0t311c51.png

		# Lock the screen after 300 seconds of inactivity, then turn off
		# all displays after another 300 seconds, and turn the screens back on when
		# resumed. It will also lock the screen before the computer goes to sleep.

		exec-once = swayidle timeout 900 'swaylock -f -i $wallpaperdir/painting/fNENc8z.jpg' timeout 1200 'hyprctl dispatch dpms off' resume 'hyprctl dispatch dpms on' timeout 1800 'systemctl suspend' before-sleep 'swaylock -f -i $wallpaperdir/painting/fNENc8z.jpg' 'swaylock -f -i $wallpaperdir/painting/fNENc8z.jpg'

	# [applets]
		exec = nm-applet
		exec = copyq
		exec = nextcloud --background
		# volume (wob)
		exec = rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

# [monitor]
	monitor=DP-2,highrr,auto,1 #,bitdepth,10 # -> unable to take screenshots when 10 bit is enabled, failed to copy output
	monitor=DP-3,highrr,auto,1

# [workspaces]
	workspace=DP-2,1
	wsbind=1,DP-2
	wsbind=2,DP-3
	wsbind=3,DP-2
	wsbind=4,DP-3
	wsbind=5,DP-2
	wsbind=6,DP-3
	wsbind=7,DP-2
	wsbind=8,DP-3
	wsbind=9,DP-2
# [input settings]
	input {
	  kb_layout = us
	  follow_mouse = 1
	  sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

	  # enable numlock
	  numlock_by_default = true
	}

# [general settings]
	general {
	  # damage_tracking=full # no longer does anything
	  gaps_in=5
	  gaps_out=5
	  border_size = 2
	  col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
	  col.inactive_border = rgba(595959aa)
	  no_border_on_floating = true
	  layout = dwindle
	}

# [misc settings]
	misc {
	  disable_hyprland_logo = true
	  disable_splash_rendering = true
	  mouse_move_enables_dpms = true
	  enable_swallow = true
	  swallow_regex = ^(konsole)$
	  vrr = 2
	  # vrr 2 means only fullscreen, 1 means all time
	}

# [decoration]
	decoration {

	  # [corner rounding]
		  rounding = 3
		  multisample_edges = true

	  # [opacity]
		  active_opacity = 1.0
		  inactive_opacity = 1.0

	  # [blur]
		  blur = true
		  blur_size = 3
		  blur_passes = 3
		  blur_new_optimizations = true

	  # [shadow]
		  drop_shadow = true
		  shadow_ignore_window = true
		  shadow_offset = 2 2
		  shadow_range = 4
		  shadow_render_power = 2
		  col.shadow = 0x66000000

	  # [blur applications]
		  blurls = gtk-layer-shell
		  #blurls = waybar
		  blurls = swaync-client
		  blurls = swaync
		  blurls = lockscreen
		  blurls = launcher
		  blurls = notifications
		  blurls = wob
	}

# [animation]
	animations {
	  enabled = true

	  # [bezier curve]
		  bezier = overshot, 0.05, 0.9, 0.1, 1.05
		  bezier = smoothOut, 0.36, 0, 0.66, -0.56
		  bezier = smoothIn, 0.25, 1, 0.5, 1

	  # [animations]
		  animation = windows, 1, 5, overshot, slide
		  animation = windowsOut, 1, 4, smoothOut, slide
		  animation = windowsMove, 1, 4, default
		  animation = border, 1, 10, default
		  animation = fade, 1, 10, smoothIn
		  animation = fadeDim, 1, 10, smoothIn
		  animation = workspaces, 1, 6, default

	}

# [layouts]
	dwindle {
	  no_gaps_when_only = false
	  pseudotile = true # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
	  preserve_split = true # you probably want this
	}
	master {
	    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
	    new_is_master = true
	}

# [window rules]
	windowrule = float, file_progress
	windowrule = float, confirm
	windowrule = float, dialog
	windowrule = float, download
	windowrule = float, notification, monitor
	windowrule = float, error
	windowrule = float, splash
	windowrule = float, confirmreset
	windowrule = float, title:Open File
	windowrule = float, title:branchdialog
	windowrule = float, Lxappearance
	windowrule = float, Rofi
	windowrule = animation none,Rofi
	windowrule = float,viewnior
	windowrule = float,feh
	windowrule = float, pavucontrol-qt
	windowrule = float, pavucontrol
	windowrule = float, file-roller
	windowrule = float, steam
	windowrule = float, nextcloud
	#windowrule = move cursor -100% 1%, nextcloud
	#windowrule = size 20% 20%, nextcloud
	windowrule = float, copyq
	windowrule = move cursor -100% 5%, copyq
	windowrule = size 20% 20%, copyq
	windowrule = fullscreen, wlogout
	windowrule = float, title:wlogout
	windowrule = fullscreen, title:wlogout
	windowrule = idleinhibit focus, mpv
	windowrule = idleinhibit fullscreen, firefox
	windowrule = float, title:^(Media viewer)$
	windowrule = float, title:^(Volume Control)$
	windowrule = float, title:^(Picture-in-Picture)$
	windowrule = size 800 600, title:^(Volume Control)$
	windowrule = move 75 44%, title:^(Volume Control)$

	windowrule=float,org.kde.polkit-kde-authentication-agent-1

# [keybinds]
	# [applications]
		bind = $mainMod, space, exec, killall fuzzel || fuzzel
		bind = $mainMod, period, exec, killall rofi || rofi -show emoji -emoji-format "{emoji}" -modi emoji -theme ~/.config/rofi/global/emoji
		bind = $mainMod, F1, exec, ~/.config/hypr/keybind
		bind = $mainMod, C, exec, konsole
		bind = $mainMod, Return, exec, kitty
		bind = $mainMod, E, exec, dolphin
		bind = $mainMod, W, exec, firefox
		bind = $mainMod, V, exec, copyq toggle


	# [multimedia]
		binde=, XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+ && pamixer --get-volume > $WOBSOCK
		binde=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%- && pamixer --get-volume > $WOBSOCK
		binde=, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && ( [ "$(pamixer --get-mute)" = "true" ] && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK
		bind=, XF86AudioPlay, exec, playerctl play-pause
		bind=, XF86AudioPause, exec, playerctl play-pause
		bind=, XF86AudioNext, exec, playerctl next
		bind=, XF86AudioPrev, exec, playerctl previous

	# [screenshots]
		$screenshotarea = hyprctl keyword animation "fadeOut,0,0,default"; grimblast --notify copysave area; hyprctl keyword animation "fadeOut,1,4,default"

		# [grimblast (under $HOME/bin)]
		bind = , print, exec, $screenshotarea
		bind = $mainMod SHIFT, print, exec, grimblast --notify --cursor copysave output
		bind = $mainMod ALT, print, exec, grimblast --notify --cursor copysave screen

		# [normal grim]
		#bind=$mainMod ALT,Print,exec,grim $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y%m%d%H%M%S_1.png') && notify-send 'Screenshot Saved'
		#bind=$mainMod,Print,exec,grim - | wl-copy && notify-send 'Screenshot Copied to Clipboard'
		bind=$mainMod CTRL,print,exec,grim - | swappy -f -
		#bind=,Print,exec,p=$HOME/Pictures/screenshots/$(date +'%Y%m%d%H%M%S_1.png'); grim -g "$(slurp)" "${p}"; wl-copy < $p ; notify-send "Screenshot Coppied && Saved at $p"


	# [misc]
		bind = $mainMod SHIFT, X, exec, hyprpicker -a -n
		bind = CTRL ALT, L, exec, swaylock --daemonize --image $wallpaperdir/painting/fNENc8z.jpg

		#bind = $mainMod, space, exec, killall rofi || rofi -show drun -theme ~/.config/rofi/global/rofi.rasi
		bind = $mainMod, escape, exec, wlogout --protocol layer-shell -b 5 -T 400 -B 400

	# [Toggle Bar]
		bind = $mainMod, B, exec, pkill -USR1 waybar || pkill -USR1 waybar

	# [window management]
		# [basics]
			bind = $mainMod, X, killactive,
			bind = $mainMod SHIFT, Q, exit,
			bind = $mainMod, F, fullscreen,
			bind = $mainMod SHIFT, F, togglefloating,
		# [layout managemnt]
			bind = $mainMod, P, pseudo, # dwindle
			bind = $mainMod, S, togglesplit, # dwindle

		# [window focus]
			bind = $mainMod, left, movefocus, l
			bind = $mainMod, right, movefocus, r
			bind = $mainMod, up, movefocus, u
			bind = $mainMod, down, movefocus, d

		# [window movement]
			bind = $mainMod SHIFT, left, movewindow, l
			bind = $mainMod SHIFT, right, movewindow, r
			bind = $mainMod SHIFT, up, movewindow, u
			bind = $mainMod SHIFT, down, movewindow, d

		# [window resizing]
			bind = $mainMod CTRL, left, resizeactive, -80 0
			bind = $mainMod CTRL, right, resizeactive, 80 0
			bind = $mainMod CTRL, up, resizeactive, 0 -80
			bind = $mainMod CTRL, down, resizeactive, 0 80

	# [workspace management]
		# [tabbed]
			bind= $mainMod, g, togglegroup
			bind= $mainMod, tab, changegroupactive

		# [special]
			bind = $mainMod, grave, togglespecialworkspace
			bind = $mainMod SHIFT, grave, movetoworkspace, special

		# [workspace switching]
			bind=$mainMod, 1, workspace, 1
			bind=$mainMod, 2, workspace, 2
			bind=$mainMod, 3, workspace, 3
			bind=$mainMod, 4, workspace, 4
			bind=$mainMod, 5, workspace, 5
			bind=$mainMod, 6, workspace, 6
			bind=$mainMod, 7, workspace, 7
			bind=$mainMod, 8, workspace, 8
			bind=$mainMod, 9, workspace, 9
			bind = $mainMod ALT, up, workspace, e+1
			bind = $mainMod ALT, down, workspace, e-1
		# [workspace to monitor]
			bind=$mainMod CTRL,1,moveworkspacetomonitor,1 current
			bind=$mainMod CTRL,2,moveworkspacetomonitor,2 current
			bind=$mainMod CTRL,3,moveworkspacetomonitor,3 current
			bind=$mainMod CTRL,4,moveworkspacetomonitor,4 current
			bind=$mainMod CTRL,5,moveworkspacetomonitor,5 current
			bind=$mainMod CTRL,6,moveworkspacetomonitor,6 current
			bind=$mainMod CTRL,7,moveworkspacetomonitor,7 current
			bind=$mainMod CTRL,8,moveworkspacetomonitor,8 current
			bind=$mainMod CTRL,9,moveworkspacetomonitor,9 current

		# [window to workspace switching]
			bind = $mainMod SHIFT, 1, movetoworkspace, 1
			bind = $mainMod SHIFT, 2, movetoworkspace, 2
			bind = $mainMod SHIFT, 3, movetoworkspace, 3
			bind = $mainMod SHIFT, 4, movetoworkspace, 4
			bind = $mainMod SHIFT, 5, movetoworkspace, 5
			bind = $mainMod SHIFT, 6, movetoworkspace, 6
			bind = $mainMod SHIFT, 7, movetoworkspace, 7
			bind = $mainMod SHIFT, 8, movetoworkspace, 8
			bind = $mainMod SHIFT, 9, movetoworkspace, 9
			#bind = $mainMod SHIFT, 0, movetoworkspace, 10

		# [mouse actions]
			bindm = $mainMod, mouse:272, movewindow
			bindm = $mainMod, mouse:273, resizewindow
			bind = $mainMod, mouse_down, workspace, e+1
			bind = $mainMod, mouse_up, workspace, e-1
